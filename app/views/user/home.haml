-# encoding: utf-8

:javascript
  $(".help-trigger").click(function() {
    $('body').chardinJs('start');
  });
.row
  .span4.offset2
    .media.well
      %img.pull-left.media-object{:src => "https://secure.gravatar.com/avatar/#{Digest::MD5.hexdigest(@user.email)}?s=64"}/
      .media-body
        %h4
          = @user.nickname
          %span.label.label-important
            = vip_level(@user.grow_points)
        %p
          = @user.email
  .span4
    %h4 可用余额
    %h2
      = "%.2f" % @user.balance.to_f
      %small 元
    %a.btn.btn-primary{:href => "/user/deposit/"} 充值
    %a.btn.disabled{:href => "#"} 转账
%hr/
.row
  .span8.offset2
    .tabbable.tabs-left
      %ul#trendmaps.nav.nav-tabs
        %li.active
          %a{:href => "#home"} 支出
        %li
          %a{:href => "#profile"} 收入
        %li
          %a{:href => "#messages"} 综合开销
        %li
          %a{:href => "#settings"} 综合盈利
      .tab-content
        #home.tab-pane.active
          #tm-spent
        #profile.tab-pane
          #tm-income
        #messages.tab-pane
          #tm-overhead
        #settings.tab-pane
          #tm-profit
      :javascript
        $('#trendmaps a').click(function (e) {
          e.preventDefault();
          $(this).tab('show');
        })
      :javascript
        var months = #{@months.inspect};
        var data_spent = #{@data_spent.inspect}
        var data_income = #{@data_income.inspect};
        var data_overhead = #{@data_overhead.inspect};
        var data_profit = #{@data_profit.inspect};

        var ds_scale = #{@ds_scale};
        var di_scale = #{@di_scale};
        var do_max = #{@do_max};
        var do_min = #{@do_min};
        var dp_max = #{@dp_max}
        var dp_min = #{@dp_min};
        
        function calcx(pos) {
          return (430/11)*pos+15;
        }
        function calcy(data, max, min) {
          return 70-((data-min)/(max-min))*50;
        }
        
        function maketm(tmid, tmdata, tmdmax, tmdmin) {
          var svg = d3.select(tmid)
                      .append("svg")
                      .attr("width", 460)
                      .attr("height", 100)
                      .attr("style", "overflow: hidden; position: relative;");
          
          var pathset = [];
          for (var dp=0; dp<tmdata.length-1; dp++) {
            pathset.push("M"+(calcx(dp))+","+(calcy(tmdata[dp], tmdmax, tmdmin))+"L"+(calcx(dp+1))+","+(calcy(tmdata[dp+1], tmdmax, tmdmin)));
          }
          svg.selectAll("path")
             .data(pathset)
             .enter()
             .append("path")
             .attr("style", "-webkit-tap-highlight-color: rgba(0, 0, 0, 0);")
             .attr("fill", "none")
             .attr("stroke", "#d8e5eb")
             .attr("d", function(d) {
               return d;
             })
             .attr("stroke-width", "4px");
          
            var tooltip = d3.select("body").append("div")   
              .attr("class", "tooltip")               
              .style("opacity", 0);

          var circles = svg.selectAll("circle")
                           .data(tmdata)
                           .enter()
                           .append("circle")
                           .attr("r", 5)
                           .attr("fill", "#ffffff")
                           .attr("stroke", "#cee2e9")
                           .attr("stroke-width", "2.5px")
                           .attr("cx", function(d, i) {
                             return calcx(i);
                           })
                           .attr("cy", function(d) {
                             return calcy(d, tmdmax, tmdmin);
                           })
                           .on("mouseover", function(d, i) {
                             if (d3.select(this).style("stroke") != "#ffb515") {
                               circles.style("stroke", "#cee2e9");
                               d3.select(this).style("stroke", "#ffb515");
                               tooltip.style("opacity", 0)
                                      .style("left", d3.event.pageX + "px")
                                      .style("top", d3.event.pageY - 30 + "px")
                                      .html(d);
                               tooltip.transition()
                                      .duration(200)
                                      .style("opacity", .9);
                             };
                           })
                           .on("mouseout", function() {
                              circles.style("stroke", "#cee2e9");
                              tooltip.transition()
                                     .duration(200)
                                     .style("opacity", 0);
                           });
          svg.selectAll("text")
             .data(months)
             .enter()
             .append("text")
             .attr("x", function(d,i) {
               return calcx(i);
             })
             .attr("y", 87)
             .attr("text-anchor", "middle")
             .attr("font-size", "12px")
             .attr("font-family", "Arial")
             .attr("stroke", "none")
             .attr("fill", "#cee2e9")
             .append("tspan")
             .attr("style", "-webkit-tap-highlight-color: rgba(0, 0, 0, 0);")
             .attr("dy", "4.1640625")
             .text( function(d) {
               return d+"月"
             });

        }
        
        maketm("#tm-spent", data_spent, ds_scale, 0);
        maketm("#tm-income", data_income, di_scale, 0);
        maketm("#tm-overhead", data_overhead, do_max, do_min);
        maketm("#tm-profit", data_profit, dp_max, dp_min);
  .row
  .span10.offset1
    %h4{:style => "text-align: center;"}
      支付历史
    %hr/
    %table.table.table-striped.table-bordered#payments{ :cellpadding => "0", :cellspacing => "0", :border => "0"}
      %thead
        %tr
          %th 变更时间
          %th 名称 | 交易号
          %th 对方
          %th 金额 | 明细
          %th 状态
          %th 操作
      %tbody
        - @user.payment.all(:order => [ :updated_at.desc ]).each do |pay|
          %tr
            %td
              - if pay.ended_at
                = pay.ended_at.strftime("%Y.%m.%d")
                %br/
                %small
                  = pay.ended_at.strftime("%H:%M:%S")
            %td
              = pay.name
              %br/
              %small 交易号 #{pay.token[0,8]}...#{pay.token[-5,5]}
            %td
              = pay.recipient
            %td
              - if pay.type == :payment
                = "-%.2f" % pay.pay_amount.to_f
              - else
                = "%.2f" % pay.pay_amount.to_f
            %td
              - if pay.type == :payment
                - if pay.status == :succeed
                  已支付
                - elsif pay.status == :pending
                  等待支付
                - elsif pay.status == :failed
                  支付失败
                - elsif pay.status == :expired
                  超过时限, 支付失败
              - elsif pay.type == :inpour
                已充值
              - elsif pay.type == :refund
                已退款
              - elsif pay.type == :transfer
                已转账
            %td
              %i.icon-remove
    :javascript
      /* Set the defaults for DataTables initialisation */
      $.extend( true, $.fn.dataTable.defaults, {
        "sDom": "<'row-fluid'<'span6'l><'span6'f>r>t<'row-fluid'<'span6'i><'span6'p>>",
        "sPaginationType": "bootstrap",
        "oLanguage": {
          "sLengthMenu": "_MENU_ records per page"
        }
      } );


      /* Default class modification */
      $.extend( $.fn.dataTableExt.oStdClasses, {
        "sWrapper": "dataTables_wrapper form-inline"
      } );


      /* API method to get paging information */
      $.fn.dataTableExt.oApi.fnPagingInfo = function ( oSettings )
      {
        return {
          "iStart":         oSettings._iDisplayStart,
          "iEnd":           oSettings.fnDisplayEnd(),
          "iLength":        oSettings._iDisplayLength,
          "iTotal":         oSettings.fnRecordsTotal(),
          "iFilteredTotal": oSettings.fnRecordsDisplay(),
          "iPage":          oSettings._iDisplayLength === -1 ?
            0 : Math.ceil( oSettings._iDisplayStart / oSettings._iDisplayLength ),
          "iTotalPages":    oSettings._iDisplayLength === -1 ?
            0 : Math.ceil( oSettings.fnRecordsDisplay() / oSettings._iDisplayLength )
        };
      };


      /* Bootstrap style pagination control */
      $.extend( $.fn.dataTableExt.oPagination, {
        "bootstrap": {
          "fnInit": function( oSettings, nPaging, fnDraw ) {
            var oLang = oSettings.oLanguage.oPaginate;
            var fnClickHandler = function ( e ) {
              e.preventDefault();
              if ( oSettings.oApi._fnPageChange(oSettings, e.data.action) ) {
                fnDraw( oSettings );
              }
            };

            $(nPaging).addClass('pagination').append(
              '<ul>'+
                '<li class="prev disabled"><a href="#">&larr; '+oLang.sPrevious+'</a></li>'+
                '<li class="next disabled"><a href="#">'+oLang.sNext+' &rarr; </a></li>'+
              '</ul>'
            );
            var els = $('a', nPaging);
            $(els[0]).bind( 'click.DT', { action: "previous" }, fnClickHandler );
            $(els[1]).bind( 'click.DT', { action: "next" }, fnClickHandler );
          },

          "fnUpdate": function ( oSettings, fnDraw ) {
            var iListLength = 5;
            var oPaging = oSettings.oInstance.fnPagingInfo();
            var an = oSettings.aanFeatures.p;
            var i, ien, j, sClass, iStart, iEnd, iHalf=Math.floor(iListLength/2);

            if ( oPaging.iTotalPages < iListLength) {
              iStart = 1;
              iEnd = oPaging.iTotalPages;
            }
            else if ( oPaging.iPage <= iHalf ) {
              iStart = 1;
              iEnd = iListLength;
            } else if ( oPaging.iPage >= (oPaging.iTotalPages-iHalf) ) {
              iStart = oPaging.iTotalPages - iListLength + 1;
              iEnd = oPaging.iTotalPages;
            } else {
              iStart = oPaging.iPage - iHalf + 1;
              iEnd = iStart + iListLength - 1;
            }

            for ( i=0, ien=an.length ; i<ien ; i++ ) {
              // Remove the middle elements
              $('li:gt(0)', an[i]).filter(':not(:last)').remove();

              // Add the new list items and their event handlers
              for ( j=iStart ; j<=iEnd ; j++ ) {
                sClass = (j==oPaging.iPage+1) ? 'class="active"' : '';
                $('<li '+sClass+'><a href="#">'+j+'</a></li>')
                  .insertBefore( $('li:last', an[i])[0] )
                  .bind('click', function (e) {
                    e.preventDefault();
                    oSettings._iDisplayStart = (parseInt($('a', this).text(),10)-1) * oPaging.iLength;
                    fnDraw( oSettings );
                  } );
              }

              // Add / remove disabled classes from the static elements
              if ( oPaging.iPage === 0 ) {
                $('li:first', an[i]).addClass('disabled');
              } else {
                $('li:first', an[i]).removeClass('disabled');
              }

              if ( oPaging.iPage === oPaging.iTotalPages-1 || oPaging.iTotalPages === 0 ) {
                $('li:last', an[i]).addClass('disabled');
              } else {
                $('li:last', an[i]).removeClass('disabled');
              }
            }
          }
        }
      } );


      /*
       * TableTools Bootstrap compatibility
       * Required TableTools 2.1+
       */
      if ( $.fn.DataTable.TableTools ) {
        // Set the classes that TableTools uses to something suitable for Bootstrap
        $.extend( true, $.fn.DataTable.TableTools.classes, {
          "container": "DTTT btn-group",
          "buttons": {
            "normal": "btn",
            "disabled": "disabled"
          },
          "collection": {
            "container": "DTTT_dropdown dropdown-menu",
            "buttons": {
              "normal": "",
              "disabled": "disabled"
            }
          },
          "print": {
            "info": "DTTT_print_info modal"
          },
          "select": {
            "row": "active"
          }
        } );

        // Have the collection use a bootstrap compatible dropdown
        $.extend( true, $.fn.DataTable.TableTools.DEFAULTS.oTags, {
          "collection": {
            "container": "ul",
            "button": "li",
            "liner": "a"
          }
        } );
      }


      /* Table initialisation */
      $(document).ready(function() {
        $('#payments').dataTable( {
          "sDom": "<'row'<'span5'l><'span5'f>r>t<'row'<'span5'i><'span5'p>>",
          "sPaginationType": "bootstrap",
          "oLanguage": {
            "sLengthMenu": "_MENU_ records per page"
          }
        } );
      } );
